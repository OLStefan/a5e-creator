name: Check & Merge

on:
  push:
    branches:
      - 'develop'

env:
  BRANCH_NAME: staging
  CHECK_DIFF_RESULT: srcDiff

jobs:
  setup:
    name: Setup
    concurrency: ci-${{ github.ref }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.push.head.ref }}
          fetch-depth: 0

      - name: Setup git
        run: |
          git config --global user.email "${GITHUB_ACTOR}"
          git config --global user.name "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: remove old staging, if existing
        continue-on-error: true
        run: |
          if git ls-remote | grep -i ${{ env.BRANCH_NAME }}; then git push -d origin ${{ env.BRANCH_NAME }}; fi 

      - name: Push staging branch
        run: |
          git checkout -b ${{ env.BRANCH_NAME }}
          git merge origin/${{ github.event.repository.default_branch }}
          git push --set-upstream origin ${{ env.BRANCH_NAME }}

      - name: Check for changes source files
        shell: pwsh
        id: check_file_changed
        run: |
          # Diff HEAD with the previous commit
          $diff = git diff --name-only ${{ env.BRANCH_NAME }}..origin/${{ github.event.repository.default_branch }}

          $SourceDiff = $diff | Where-Object { $_ -match '^src/' -or $_ -match '^package.json$' -or $_ -match '^package.json$' -or $_ -match '^.prettierrc$' -or $_ -match '^.eslintrc$' -or $_ -match '^tsconfig.json$' }
          $HasDiff = $SourceDiff.Length -gt 0

          # Set the output name"
          Write-Host "::set-output name=${{ env.CHECK_DIFF_RESULT }}::$HasDiff"    

  check:
    name: Static Checks
    concurrency: ci-${{ github.ref }}
    needs: setup
    if: needs.setup.outputs.${{ env.CHECK_DIFF_RESULT }} == 'True'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ env.BRANCH_NAME }}

      - name: Setpup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'

      - name: Install Dependencies
        run: yarn install --immutable

      - name: Static Checks
        run: yarn check:all

  merge:
    name: Merge to main
    concurrency: ci-${{ github.ref }}
    needs: check
    if: always() && !canceled() && needs.check.result != 'failure'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ env.BRANCH_NAME }}

      # https://github.com/marketplace/actions/github-pull-request-action
      - name: create pull request
        id: open-pr
        uses: repo-sync/pull-request@v2
        with:
          destination_branch: ${{ github.event.repository.default_branch }}
          pr_title: '[Automated] Merge ${{ github.ref_name }} into ${{ github.event.repository.default_branch }}'
          pr_label: 'pipeline'
          pr_body: 'Automated Pull Request'

      # https://github.com/juliangruber/merge-pull-request-action
      - name: Merge Pull Request
        uses: juliangruber/merge-pull-request-action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ steps.open-pr.outputs.pr_number }}
          method: merge

  cleanup:
    name: CleanUp
    concurrency: ci-${{ github.ref }}
    needs: merge
    runs-on: ubuntu-latest
    steps:
      - name: Checkout develop
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.push.head.ref }}
          fetch-depth: 0

      - name: Push staging branch
        run: |
          git merge origin/${{ github.event.repository.default_branch }}
          git push

      - name: Cleanup
        run: |
          git config --global user.email "${GITHUB_ACTOR}"
          git config --global user.name "${GITHUB_ACTOR}@users.noreply.github.com"
          git remote update
          git fetch
          git push -d origin ${{ env.BRANCH_NAME }}
